# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # using anaconda3 from continuumio
      - image: continuumio/anaconda3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - condareqs-{{ checksum "mlapp.yml" }}
            # fallback to using the latest cache if no exact match is found
            - condareqs-

        # Install the necessary Python packages
        # activate conda env for future use
        # echo "source activate myenv" > ~/.bashrc
        # source /opt/conda/etc/profile.d/conda.sh
      - run:
          name: Install dependencies
          command: |
            conda env create -f mlapp.yml
            source /opt/conda/etc/profile.d/conda.sh
            conda activate mlapp

      - save_cache:
          paths:
            - ./anaconda3/envs/mlapp
          key: condareqs-{{ checksum "mlapp.yml" }}
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            pwd
            source ~/anaconda3/etc/profile.d/conda.sh
            conda init bash
            conda activate mlapp
            python hte-models.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports
